name: IPTV to Telegram Stream

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 hours max
    env:
      TELEGRAM_KEY: ${{ secrets.TELEGRAM_KEY }}
      TELEGRAM_URL: ${{ secrets.TELEGRAM_URL }}
      SOURCE_URL: ${{ secrets.SOURCE_URL }}
      FIFO: buffer.ts
      BUFFER_DELAY: 30  # seconds delay

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: Start IPTV streaming with delay buffer
        run: |
          #!/bin/bash
          set -e

          MAX_RETRIES=50
          RETRY_DELAY=5

          for i in $(seq 1 $MAX_RETRIES); do
              echo "ðŸ”„ Starting IPTV -> FIFO -> Telegram attempt $i/$MAX_RETRIES"

              # Remove old FIFO/file
              if [[ -e "$FIFO" ]]; then
                  echo "Removing old FIFO/file..."
                  rm -f "$FIFO"
              fi

              # Create FIFO
              mkfifo "$FIFO"
              echo "FIFO buffer created: $FIFO"

              # Start IPTV reader in background with buffering
              ffmpeg -re -i "$SOURCE_URL" -c copy -f mpegts "$FIFO" -flags +discardcorrupt -err_detect ignore_err &
              IPTV_PID=$!

              # Add a 30-second buffer delay
              ffmpeg -re -i "$FIFO" -c copy -f flv -muxdelay ${BUFFER_DELAY} "${TELEGRAM_URL}/${TELEGRAM_KEY}"

              # Kill IPTV reader if still running
              kill $IPTV_PID || true

              echo "Stream stopped, retrying in $RETRY_DELAY seconds..."
              sleep $RETRY_DELAY
          done
