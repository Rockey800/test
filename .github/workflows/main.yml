name: IPTV → GStreamer → Telegram Live (720p veryfast)

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 hours

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GStreamer + Tools
        run: |
          sudo apt update
          sudo apt install -y gstreamer1.0-tools gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav

      - name: DEBUG - Check Secrets
        env:
          IPTV_SOURCE: ${{ secrets.IPTV_SOURCE }}
          TELEGRAM_SOURCE_URL: ${{ secrets.TELEGRAM_SOURCE_URL }}
        run: |
          echo "IPTV: ${IPTV_SOURCE:0:50}..."
          if [ -z "$TELEGRAM_SOURCE_URL" ]; then
            echo "ERROR: TELEGRAM_SOURCE_URL EMPTY!"
            exit 1
          fi
          echo "Telegram URL length: ${#TELEGRAM_SOURCE_URL} chars"

      - name: Start GStreamer Live Stream
        env:
          IPTV_SOURCE: ${{ secrets.IPTV_SOURCE }}
          TELEGRAM_SOURCE_URL: ${{ secrets.TELEGRAM_SOURCE_URL }}
        run: |
          retries=0
          max_retries=10

          while [ $retries -lt $max_retries ]; do
            echo "Starting GStreamer pipeline to $TELEGRAM_SOURCE_URL"

            gst-launch-1.0 \
              -v \
              -e \
              -message-flags=2 \
              souphttpsrc location="$IPTV_SOURCE" is-live=true do-timestamp=true \
              ! tsdemux name=demux \
              demux. ! queue ! h264parse ! avdec_h264 max-threads=4 error-ignored=true \
              ! queue ! videoconvert ! videoscale ! video/x-raw,width=1280,height=720,framerate=30/1 ! \
              x264enc preset=veryfast tune=zerolatency bitrate=1800 key-int-max=60 \
              ! queue ! h264parse ! mux. \
              demux. ! queue ! aacparse ! avdec_aac ! audioconvert ! audioresample ! audio/x-raw,rate=44100,channels=2 ! \
              avenc_aac bitrate=128000 ! queue ! aacparse ! mux. \
              flvmux name=mux streamable=true ! \
              rtmpsink location="$TELEGRAM_SOURCE_URL"

            exit_code=$?
            echo "Pipeline ended with code $exit_code"

            if [ $exit_code -eq 0 ]; then
              echo "STREAM ENDED CLEANLY!"
              break
            else
              retries=$((retries + 1))
              echo "Failed. Retry $retries/$max_retries in 10s..."
              sleep 10
            fi
          done

          if [ $retries -eq $max_retries ]; then
            echo "MAX RETRIES REACHED. ABORTING."
            exit 1
          fi