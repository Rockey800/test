name: IPTV → mpv → Telegram Live (720p veryfast)

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    env:
      IPTV_SOURCE: ${{ secrets.IPTV_SOURCE }}
      TELEGRAM_SOURCE_URL: ${{ secrets.TELEGRAM_SOURCE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt update -qq
          sudo apt install -y \
            mpv ffmpeg xvfb pulseaudio-utils alsa-utils x11-utils \
            xkb-data

      - name: Start Xvfb + PulseAudio
        run: |
          Xvfb :99 -screen 0 1280x720x24 +extension GLX +render -nolisten tcp &
          echo "DISPLAY=:99" >> $GITHUB_ENV
          pulseaudio --start --exit-idle-time=-1
          sleep 3

      - name: Launch mpv (audio via Pulse)
        run: |
          echo "Starting mpv..."
          mpv "$IPTV_SOURCE" \
            --vo=x11 \
            --hwdec=no \
            --loop=inf \
            --really-quiet \
            --geometry=1280x720 \
            --title="iptv-live" \
            --audio-device=pulse \
            --no-terminal \
            --cache=no \
            --demuxer-lavf-o=analyzeduration=1M,probesize=1M \
            &> mpv.log &
          
          MPV_PID=$!
          echo "mpv PID: $MPV_PID"
          echo "MPV_PID=$MPV_PID" >> $GITHUB_ENV
          
          sleep 15
          if ! kill -0 $MPV_PID 2>/dev/null; then
            echo "mpv crashed! Logs:"
            cat mpv.log
            exit 1
          fi

      - name: Validate Telegram URL
        run: |
          [ -z "$TELEGRAM_SOURCE_URL" ] && { echo "TELEGRAM_SOURCE_URL missing!"; exit 1; }
          echo "Telegram URL OK"

      - name: Stream to Telegram (veryfast + audio)
        run: |
          retries=0
          max_retries=12

          while [ $retries -lt $max_retries ]; do
            echo "=== Stream attempt $((retries + 1)) ==="

            ffmpeg \
              -f x11grab -draw_mouse 0 -video_size 1280x720 -framerate 30 -i :99.0 \
              -f pulse -i default -ac 2 -ar 44100 \
              -c:v libx264 -preset veryfast -tune zerolatency \
              -b:v 1800k -maxrate 2000k -bufsize 4000k \
              -vf "format=yuv420p" \
              -g 60 -keyint_min 30 -bf 0 \
              -c:a aac -b:a 128k \
              -f flv \
              -reconnect 1 -reconnect_streamed 1 \
              "$TELEGRAM_SOURCE_URL" > ffmpeg.log 2>&1 &

            FFMPEG_PID=$!
            echo "ffmpeg PID: $FFMPEG_PID"

            # Keep alive check
            while kill -0 $FFMPEG_PID 2>/dev/null; do
              sleep 30
              echo "Stream running..."
            done

            wait $FFMPEG_PID
            code=$?

            tail -n 20 ffmpeg.log

            [ $code -eq 0 ] && break

            retries=$((retries + 1))
            echo "Retry $retries in 5s..."
            sleep 5
          done

          [ $retries -eq $max_retries ] && exit 1