name: Browser RDP via Cloudflare

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 300  # 5 hours

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install websockify
        run: |
          python -m pip install --upgrade pip
          pip install websockify

      - name: Download noVNC
        run: |
          $noVNCDir = "C:\noVNC"
          if (-Not (Test-Path $noVNCDir)) { New-Item -ItemType Directory -Path $noVNCDir | Out-Null }
          Invoke-WebRequest -Uri "https://github.com/novnc/noVNC/archive/refs/heads/master.zip" -OutFile "$noVNCDir\novnc.zip"
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          [System.IO.Compression.ZipFile]::ExtractToDirectory("$noVNCDir\novnc.zip", $noVNCDir)
          Remove-Item "$noVNCDir\novnc.zip"

      - name: Start RDP server (Windows RDP)
        run: |
          Write-Host "‚úÖ Windows RDP assumed running on port 3389"

      - name: Start noVNC / websockify
        run: |
          $noVNCDir = "C:\noVNC\noVNC-master"
          Write-Host "üöÄ Starting websockify for RDP..."
          Start-Process -FilePath "python" -ArgumentList "$noVNCDir\websockify\run", "-v", "5900", "--wrap-mode=rdp", "localhost", "3389" -WindowStyle Hidden

          # Wait until port 5900 is open
          $maxTries = 20
          $connected = $false
          for ($i=1; $i -le $maxTries; $i++) {
              try {
                  $tcpClient = New-Object System.Net.Sockets.TcpClient
                  $tcpClient.Connect("127.0.0.1", 5900)
                  $tcpClient.Close()
                  $connected = $true
                  break
              } catch {}
              Start-Sleep -Seconds 2
          }

          if (-not $connected) {
              Write-Warning "‚ö†Ô∏è Websockify did not start on port 5900."
              exit 1
          } else {
              Write-Host "‚úÖ Websockify is running on http://localhost:5900"
          }

      - name: Download Cloudflared
        run: |
          $cloudDir = "C:\ProgramData\cloudflared"
          if (-Not (Test-Path $cloudDir)) { New-Item -ItemType Directory -Path $cloudDir | Out-Null }
          $cloudExe = "$cloudDir\cloudflared.exe"
          if (-Not (Test-Path $cloudExe)) {
              Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile $cloudExe
          }

      - name: Start Cloudflare Tunnel for noVNC
        run: |
          $cloudExe = "C:\ProgramData\cloudflared\cloudflared.exe"

          # Ensure port 5900 is open
          $maxWait = 30
          $waited = 0
          $portOpen = $false
          while (-not $portOpen -and $waited -lt $maxWait) {
              try {
                  $tcp = New-Object System.Net.Sockets.TcpClient
                  $tcp.Connect("127.0.0.1", 5900)
                  $tcp.Close()
                  $portOpen = $true
              } catch {}
              Start-Sleep -Seconds 1
              $waited++
          }

          if (-not $portOpen) {
              Write-Warning "‚ö†Ô∏è Port 5900 not open. Cloudflared cannot start."
              exit 1
          }

          # Start Cloudflared quick tunnel and capture log
          $logFile = "$env:TEMP\cloudflared.log"
          Start-Process -FilePath $cloudExe -ArgumentList "tunnel --url http://localhost:5900" -RedirectStandardOutput $logFile -NoNewWindow -PassThru | Out-Null
          Start-Sleep -Seconds 5

          # Extract public URL
          $url = Select-String -Path $logFile -Pattern "https://.*\.trycloudflare\.com" | ForEach-Object {$_.Matches[0].Value}
          if ($url) {
              Write-Host "`nüåê Your noVNC browser RDP URL: $url`n"
          } else {
              Write-Warning "‚ö†Ô∏è Could not detect public URL. Check cloudflared logs."
          }
