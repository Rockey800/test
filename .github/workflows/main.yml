name: Smooth IPTV to Telegram

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # max 5 hours

    env:
      SOURCE_URL: "http://1tv41.icu:8080/5ZCJFs/416986/1846"  # Replace with your IPTV URL
      FIFO: "buffer.ts"
      DELAY: 30                                   # 30-second delay for smooth streaming
      RETRIES: 50                                 # Number of retries if stream fails
      TELEGRAM_URL: ${{ secrets.TELEGRAM_URL }}   # Telegram ingest URL (secret)
      TELEGRAM_KEY: ${{ secrets.TELEGRAM_KEY }}   # Telegram stream key (secret)

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: Stream IPTV to Telegram with Buffer
        run: |
          #!/bin/bash
          set -e

          echo "Removing old FIFO if exists..."
          [[ -p "$FIFO" ]] && rm -f "$FIFO"
          mkfifo "$FIFO"
          echo "FIFO buffer created: $FIFO"

          attempt=0

          while [ $attempt -lt $RETRIES ]; do
            attempt=$((attempt+1))
            echo "üîÑ Starting buffered IPTV reader attempt $attempt/$RETRIES"

            # Read IPTV into FIFO with delay, discard corrupt frames
            ffmpeg -re -i "$SOURCE_URL" \
              -c copy -f mpegts "$FIFO" \
              -flags +discardcorrupt \
              -err_detect ignore_err &
            
            IPTV_PID=$!

            # Stream FIFO to Telegram
            ffmpeg -re -i "$FIFO" \
              -c copy -f flv "${TELEGRAM_URL}/${TELEGRAM_KEY}"
            
            echo "‚ö†Ô∏è Stream ended or failed, retrying in 5 seconds..."
            kill $IPTV_PID || true
            sleep 5
          done

          echo "‚ùå Max retries reached, workflow finished."
