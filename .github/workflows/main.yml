name: Telegram Live Stream (Smooth Sports, 720p)

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: Start Smooth Telegram Stream
        env:
          SOURCE_URL: "http://your-iptv-link.m3u8"
          TELEGRAM_URL: ${{ secrets.TELEGRAM_URL }}
          TELEGRAM_KEY: ${{ secrets.TELEGRAM_KEY }}
          FIFO: "buffer.ts"
          DELAY: 30  # seconds of delay to smooth hiccups
        run: |
          [[ -p "$FIFO" ]] && rm -f "$FIFO"
          mkfifo "$FIFO"
          echo "‚ñ∂Ô∏è FIFO buffer created: $FIFO"

          while true; do
              echo "üîÑ Starting IPTV -> FIFO -> Telegram (smooth live)"

              # Read IPTV into FIFO, discard corrupt frames
              ffmpeg -re -i "$SOURCE_URL" \
                  -c copy -f mpegts -flags +discardcorrupt "$FIFO" &
              READER_PID=$!

              # Stream to Telegram with fixed delay
              ffmpeg -re -fflags +discardcorrupt \
                  -i "$FIFO" -itsoffset $DELAY \
                  -c:v libx264 -preset veryfast -tune zerolatency \
                  -b:v 3000k -maxrate 4000k -bufsize 6000k \
                  -vf "scale=1280:720" \
                  -g 50 -keyint_min 50 \
                  -c:a aac -b:a 128k -ar 44100 -ac 2 \
                  -f flv "$TELEGRAM_URL/$TELEGRAM_KEY" \
                  || true

              kill $READER_PID 2>/dev/null

              echo "‚ö†Ô∏è Stream restarted, keeping $DELAY second smooth delay"
              sleep 3
          done
