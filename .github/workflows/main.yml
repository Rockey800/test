name: Telegram Live Stream - Final Optimized Version

on:
  workflow_dispatch:
    inputs:
      iptv_link:
        description: 'Optionally override the IPTV M3U8 Link (for debug)'
        required: false
        type: string

jobs:
  start_stream:
    runs-on: ubuntu-latest
    timeout-minutes: 180 # 3-Hour Timeout

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install FFmpeg (Reliable Method)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Run Telegram-Optimized FFmpeg Stream
        env:
          TELEGRAM_RTMP_URL: ${{ secrets.TELEGRAM_RTMP_URL }}
          TELEGRAM_STREAM_KEY: ${{ secrets.TELEGRAM_STREAM_KEY }}
          IPTV_SOURCE: ${{ secrets.IPTV_SOURCE }}
          IPTV_INPUT: ${{ github.event.inputs.iptv_link }}
        run: |
          
          # Prioritize the manual input for testing, otherwise use the secure secret
          SOURCE_URL="$IPTV_INPUT"
          if [ -z "$SOURCE_URL" ]; then
            SOURCE_URL="$IPTV_SOURCE"
          fi
          
          # Check if a source is available
          if [ -z "$SOURCE_URL" ]; then
            echo "::error:: No IPTV source provided. Set the IPTV_SOURCE secret or provide a manual input."
            exit 1
          fi

          echo "Starting stream from source..."
          
          while true; do
            ffmpeg \
              -fflags +igndts+discardcorrupt \
              -reconnect 1 \
              -reconnect_at_eof 1 \
              -reconnect_streamed 1 \
              -reconnect_delay_max 2 \
              -i "$SOURCE_URL" \
              -c:v libx264 -preset veryfast -tune zerolatency -pix_fmt yuv420p \
              -r 30 -g 60 \
              -b:v 4000k -maxrate 4500k -bufsize 8000k \
              -c:a aac -ar 44100 -b:a 160k \
              -f flv \
              "$TELEGRAM_RTMP_URL/$TELEGRAM_STREAM_KEY"
            echo "FFmpeg process stopped. Restarting in 3 seconds..."
            sleep 3
          done
