name: Telegram Stream (Buffered + Auto Reconnect)

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 300   # 5 hours max

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Start buffered stream to Telegram
        env:
          SOURCE_URL: "http://tvmate.icu:8080/7ES2xf/934197/1847"
          TELEGRAM_URL: ${{ secrets.TELEGRAM_URL }}
          TELEGRAM_KEY: ${{ secrets.TELEGRAM_KEY }}
          BUFFER_SECONDS: "30"     # how much lag viewers see
          SEGMENT_SECONDS: "2"     # HLS segment duration
          USER_AGENT: "VLC/3.0.20"
        run: |
          set -euo pipefail

          # Fresh buffer dir
          rm -rf segments
          mkdir -p segments

          # Delay segments = BUFFER / SEGMENT length
          DELAY_SEGMENTS=$(( BUFFER_SECONDS / SEGMENT_SECONDS ))
          if [ "$DELAY_SEGMENTS" -lt 1 ]; then DELAY_SEGMENTS=1; fi

          echo "Buffer ${BUFFER_SECONDS}s | Segment ${SEGMENT_SECONDS}s | Delay ${DELAY_SEGMENTS} segments"

          # Writer: always re-pulls IPTV into rolling HLS
          writer_loop() {
            while true; do
              echo "[WRITER] starting $(date)"
              ffmpeg -hide_banner -loglevel warning \
                -headers "User-Agent: ${USER_AGENT}\r\n" \
                -rw_timeout 15000000 -timeout 15000000 \
                -reconnect 1 -reconnect_streamed 1 -reconnect_at_eof 1 -reconnect_delay_max 10 \
                -i "$SOURCE_URL" \
                -c copy \
                -f hls \
                -hls_time ${SEGMENT_SECONDS} \
                -hls_list_size $(( DELAY_SEGMENTS * 2 )) \
                -hls_flags delete_segments+append_list+omit_endlist+program_date_time \
                -hls_segment_filename "segments/seg%05d.ts" \
                "segments/stream.m3u8" || true
              echo "[WRITER] crashed, retrying in 5s..."
              sleep 5
            done
          }
          writer_loop > writer.log 2>&1 &

          # Wait until buffer is primed
          echo "Priming buffer (~${BUFFER_SECONDS}s)..."
          until [ -f segments/stream.m3u8 ]; do sleep 1; done
          until [ "$(ls segments/seg*.ts 2>/dev/null | wc -l | tr -d ' ')" -ge "$DELAY_SEGMENTS" ]; do sleep 1; done
          echo "Buffer ready."

          # Reader: always re-streams from delayed HLS â†’ Telegram
          reader_loop() {
            while true; do
              echo "[READER] starting $(date)"
              ffmpeg -hide_banner -loglevel warning \
                -rw_timeout 15000000 -timeout 15000000 \
                -reconnect 1 -reconnect_streamed 1 -reconnect_at_eof 1 -reconnect_delay_max 10 \
                -live_start_index -${DELAY_SEGMENTS} \
                -fflags +genpts \
                -i "segments/stream.m3u8" \
                -c:v libx264 -preset veryfast -b:v 2500k -vf "scale=1280:720" \
                -c:a aac -b:a 128k -ar 44100 -ac 2 \
                -f flv "$TELEGRAM_URL/$TELEGRAM_KEY" || true
              echo "[READER] crashed, retrying in 5s..."
              sleep 5
            done
          }
          reader_loop
