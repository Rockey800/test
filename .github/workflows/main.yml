name: Direct Link Extractor Stream

on:
  workflow_dispatch:
    inputs:
      page_url:
        description: 'URL of the page to find a stream on'
        required: true
        default: 'https://www.redditsoccerstreams.name/hd-10/'

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - name: 1. Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends ffmpeg python3-pip
        pip3 install yt-dlp

    - name: 2. Attempt to Extract Direct Stream URL
      id: extract
      run: |
        echo "‚úÖ Attempting to find direct .m3u8 video URL..."
        # This command searches the page for a master video playlist URL
        DIRECT_URL=$(yt-dlp --get-url --no-warnings "${{ github.event.inputs.page_url }}" || echo "failed")
        
        if [[ $DIRECT_URL != "failed" && $DIRECT_URL == *"m3u8"* ]]; then
          echo "‚úÖ SUCCESS: Found direct stream URL!"
          echo "stream_url=$DIRECT_URL" >> $GITHUB_OUTPUT
        else
          echo "‚ùå FAILED: Could not find a direct stream URL. The website is too well protected. Halting workflow."
          exit 1
        fi

    - name: 3. Stream Directly from Source
      if: steps.extract.outputs.stream_url
      env:
        TELEGRAM_RTMP_URL: ${{ secrets.TELEGRAM_RTMP_URL }}
      run: |
        echo "üöÄ Starting DIRECT stream from source. This is very efficient and high-quality."
        # The -c copy flag re-streams the video without re-encoding it, preserving quality.
        ffmpeg -i "${{ steps.extract.outputs.stream_url }}" \
               -c copy -f flv "$TELEGRAM_RTMP_URL"
