name: Fullscreen Unmuted Stream to Telegram

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - name: 1. Install All Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends ffmpeg xvfb wget scrot nodejs npm
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt-get install -y ./google-chrome-stable_current_amd64.deb || true
        rm google-chrome-stable_current_amd64.deb

    - name: 2. Setup Puppeteer with Plugins and Create Script
      run: |
        npm i puppeteer-extra puppeteer-extra-plugin-stealth puppeteer-extra-plugin-adblocker

        # Create the final automation script (start.js)
        cat <<'EOF' > start.js
        const puppeteer = require('puppeteer-extra');
        const StealthPlugin = require('puppeteer-extra-plugin-stealth');
        const AdblockerPlugin = require('puppeteer-extra-plugin-adblocker');

        puppeteer.use(StealthPlugin());
        puppeteer.use(AdblockerPlugin({ blockTrackers: true }));

        (async () => {
          // Selector for the main play button/area
          const PLAY_SELECTOR = 'body';
          // Selector for the unmute button
          const UNMUTE_SELECTOR = '[aria-label*="Unmute"], [class*="unmute"], [class*="volume-button-unmute"]';

          console.log('üöÄ Launching browser in fullscreen...');
          const browser = await puppeteer.launch({
            headless: false,
            executablePath: '/usr/bin/google-chrome',
            // --- KEY CHANGES FOR FULLSCREEN AND AUDIO ---
            ignoreDefaultArgs: ['--mute-audio'], // Do NOT mute audio by default
            args: [
              '--no-sandbox',
              '--disable-gpu',
              '--disable-dev-shm-usage',
              '--start-fullscreen', // Launch in fullscreen mode
              '--window-size=1280,720',
              '--display=:99'
            ]
          });

          const page = await browser.newPage();
          await page.setViewport({ width: 1280, height: 720 });
          
          console.log(' Navigating to page...');
          await page.goto('https://www.touristy.top/frame/11.php', { waitUntil: 'networkidle2' });

          // --- Click 1: Start the video ---
          console.log('‚úÖ Page loaded. Clicking to start video...');
          try {
            await page.waitForSelector(PLAY_SELECTOR, { timeout: 15000 });
            await page.click(PLAY_SELECTOR);
            console.log('‚úÖ Initial click successful.');
          } catch (error) {
            console.error('‚ùå Could not perform initial click.');
          }

          // Wait a moment for the player UI to appear
          await new Promise(resolve => setTimeout(resolve, 3000));

          // --- Click 2: Unmute the video ---
          console.log('üîä Searching for unmute button...');
          try {
            await page.waitForSelector(UNMUTE_SELECTOR, { timeout: 10000 });
            await page.click(UNMUTE_SELECTOR);
            console.log('‚úÖ Unmute successful!');
          } catch (error) {
            console.error('‚ùå Could not find or click the unmute button.');
          }
        })();
        EOF

    - name: 3. Start Stream
      env:
        TELEGRAM_RTMP_URL: ${{ secrets.TELEGRAM_RTMP_URL }}
      run: |
        echo "‚úÖ Starting virtual display..."
        Xvfb :99 -screen 0 1280x720x24 &
        echo "‚úÖ Running the fullscreen/unmute script..."
        node start.js &
        echo "‚è≥ Waiting 30 seconds for all automation to complete..."
        sleep 30
        echo "üì∏ Taking final debug screenshot..."
        DISPLAY=:99 scrot -d 1 -q 100 'debug_screenshot.jpg' -e 'mv $f /tmp/'
        echo "üöÄ Starting FFmpeg stream..."
        ffmpeg -nostdin -f x11grab -draw_mouse 0 -r 30 -s 1280x720 -i :99 -c:v libx264 -preset ultrafast -pix_fmt yuv420p -c:a aac -b:a 128k -ar 44100 -f flv "$TELEGRAM_RTMP_URL"

    - name: 4. Upload Debug Screenshot
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: debug-screenshot
        path: /tmp/debug_screenshot.jpg
