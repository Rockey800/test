name: Telegram Live Stream with Buffering and Delay

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 140  

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: Start Buffered Stream with Delay to Telegram
        env:
          SOURCE_URL: ${{ secrets.SOURCE_URL }}
          TELEGRAM_URL: ${{ secrets.TELEGRAM_URL }}
          TELEGRAM_KEY: ${{ secrets.TELEGRAM_KEY }}
        run: |
          mkdir -p /tmp/stream_segments

          # Start segmenting input stream in the background
          ffmpeg -re -i "$SOURCE_URL" \
            -c:v libx264 -preset ultrafast -tune zerolatency \
            -c:a aac -b:a 128k -ar 44100 -ac 2 \
            -f segment \
            -segment_time 5 \
            -segment_format mp4 \
            -reset_timestamps 1 \
            -strftime 1 \
            "/tmp/stream_segments/segment_%Y%m%d%H%M%S.mp4" &

          SEGMENT_PID=$!

          echo "Waiting 30 seconds to accumulate segments for buffer..."
          sleep 30

          # Stream loop
          while true; do
            cd /tmp/stream_segments

            # Remove old segments, keep last 120 (~10 minutes)
            ls -1tr | head -n -120 | xargs -d '\n' rm -f -- || true

            # Prepare concat list skipping newest 6 segments (~30 seconds delay)
            ls -1tr | head -n -6 | sed "s/^/file '/; s/$/'/" > segments_to_stream.txt

            # Check if we have at least some segments to stream
            SEGMENT_COUNT=$(wc -l < segments_to_stream.txt)
            if [ "$SEGMENT_COUNT" -eq 0 ]; then
              echo "No segments to stream yet, waiting 5 seconds..."
              sleep 5
              continue
            fi

            echo "Starting streaming ${SEGMENT_COUNT} segments to Telegram..."

            ffmpeg -re -f concat -safe 0 -i segments_to_stream.txt \
              -c copy -f flv "$TELEGRAM_URL/$TELEGRAM_KEY"

            echo "ffmpeg exited, restarting stream in 5 seconds..."
            sleep 5
          done

          # Cleanup on exit
          kill $SEGMENT_PID || true
