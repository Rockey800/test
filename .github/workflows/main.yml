name: Setup yt-dlp on Ubuntu & Extract Streams

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  extract-stream:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Update system & install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip ffmpeg

    - name: Install yt-dlp and curl_cffi
      run: |
        python3 -m pip install --user yt-dlp curl_cffi
        echo "$HOME/.local/bin" >> $GITHUB_PATH  # Add to PATH

    - name: Extract stream sources
      run: |
        # Try to get direct stream URL with impersonation
        yt-dlp -g --extractor-args "generic:impersonate=chrome" --referer "https://streamcenter.pro" "https://streamcenter.pro/embed/ch2.php" > stream_urls.txt
        # List formats to debug available streams
        yt-dlp -F --extractor-args "generic:impersonate=chrome" --referer "https://streamcenter.pro" "https://streamcenter.pro/embed/ch2.php" >> stream_urls.txt
        # Your original command (download best m3u8 stream)
        yt-dlp -f "best[protocol=m3u8_native]" -o "%(title)s.%(ext)s" --extractor-args "generic:impersonate=chrome" --referer "https://streamcenter.pro" "https://streamcenter.pro/embed/ch2.php" || echo "Download failed, check logs for stream URLs"

    - name: Upload stream URLs and logs as artifact
      uses: actions/upload-artifact@v4
      with:
        name: stream-extraction-logs
        path: |
          stream_urls.txt
          *.log
          *.m3u8
          *.ts