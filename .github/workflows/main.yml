name: Telegram Live Stream - Best Quality with 3-Hour Timeout

on:
  workflow_dispatch:
    inputs:
      iptv_link:
        description: 'Optionally override the IPTV M3U8 Link (for debug)'
        required: false
        type: string

jobs:
  start_stream:
    runs-on: ubuntu-latest
    timeout-minutes: 180 # THIS IS THE 3-HOUR TIMEOUT
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup FFmpeg
        uses: Iamshankhadeep/setup-ffmpeg@v1.2
        with:
          version: '5.1'

      - name: Run High-Quality Stable FFmpeg Stream
        env:
          TELEGRAM_RTMP_URL: ${{ secrets.TELEGRAM_RTMP_URL }}
          TELEGRAM_STREAM_KEY: ${{ secrets.TELEGRAM_STREAM_KEY }}
          IPTV_SOURCE: ${{ secrets.IPTV_SOURCE }}
          IPTV_INPUT: ${{ github.event.inputs.iptv_link }}
        run: |
          
          # Prioritize the manual input for testing, otherwise use the secure secret
          SOURCE_URL="$IPTV_INPUT"
          if [ -z "$SOURCE_URL" ]; then
            SOURCE_URL="$IPTV_SOURCE"
          fi
          
          # Check if a source is available
          if [ -z "$SOURCE_URL" ]; then
            echo "::error:: No IPTV source provided. Set the IPTV_SOURCE secret or provide a manual input."
            exit 1
          fi

          echo "Starting stream from source..."
          
          while true; do
            ffmpeg \
              -fflags +igndts+discardcorrupt \
              -reconnect 1 \
              -reconnect_at_eof 1 \
              -reconnect_streamed 1 \
              -reconnect_delay_max 4 \
              -i "$SOURCE_URL" \
              -c:v libx264 -preset veryfast -pix_fmt yuv420p -r 30 -g 60 -b:v 4000k -maxrate 4500k -bufsize 6000k \
              -c:a aac -ar 44100 -b:a 160k \
              -f flv \
              "$TELEGRAM_RTMP_URL/$TELEGRAM_STREAM_KEY"
            echo "FFmpeg crashed or stopped, restarting in 5 seconds..."
            sleep 5
          done
