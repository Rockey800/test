name: Telegram Live Stream (720p)

on:
  workflow_dispatch:
    inputs:
      resolution:
        description: 'Stream resolution (e.g., 1280:720)'
        default: '1280:720'
      bitrate:
        description: 'Video bitrate (e.g., 1500k)'
        default: '1500k'
      fps:
        description: 'Frame rate (e.g., 30)'
        default: '30'

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 hours max
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
        with:
          version: '6.1'  # Latest stable version

      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.TELEGRAM_URL }}" ] || [ -z "${{ secrets.TELEGRAM_KEY }}" ]; then
            echo "Error: TELEGRAM_URL or TELEGRAM_KEY is not set."
            exit 1
          fi

      - name: Verify source URL accessibility
        env:
          SOURCE_URL: "http://tvmate.icu:8080/7ES2xf/934197/1847"
        run: |
          curl --fail --connect-timeout 10 --max-time 30 "$SOURCE_URL" -o /dev/null || {
            echo "Error: Unable to access SOURCE_URL ($SOURCE_URL)."
            exit 1
          }

      - name: Start Telegram Live Stream
        env:
          SOURCE_URL: "http://tvmate.icu:8080/7ES2xf/934197/1847"
          TELEGRAM_URL: ${{ secrets.TELEGRAM_URL }}
          TELEGRAM_KEY: ${{ secrets.TELEGRAM_KEY }}
          RESOLUTION: ${{ github.event.inputs.resolution }}
          BITRATE: ${{ github.event.inputs.bitrate }}
          FPS: ${{ github.event.inputs.fps }}
        run: |
          # Strip 'k' from BITRATE for arithmetic (e.g., 1500k -> 1500)
          BITRATE_NUMERIC=$(echo "$BITRATE" | sed 's/k//')
          # Calculate bufsize (bitrate * 2, in kilobits)
          BUFSIZE=$((BITRATE_NUMERIC * 2))k
          
          for attempt in {1..5}; do
            echo "Starting stream attempt $attempt..."
            ffmpeg -reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5 \
              -reconnect_at_eof 1 -http_persistent 1 \
              -analyzeduration 5000000 -probesize 5000000 \
              -i "$SOURCE_URL" \
              -c:v libx264 -preset veryfast -b:v "$BITRATE" -maxrate "$BITRATE" -bufsize "$BUFSIZE" \
              -vf "fps=$FPS,scale=$RESOLUTION:force_original_aspect_ratio=decrease,pad=$RESOLUTION:(ow-iw)/2:(oh-ih)/2" \
              -g $(($FPS * 2)) -keyint_min $(($FPS * 2)) \
              -c:a aac -b:a 128k -ar 44100 -ac 2 \
              -threads 0 -tune zerolatency \
              -r "$FPS" \
              -f flv "$TELEGRAM_URL/$TELEGRAM_KEY" -loglevel verbose 2>&1 | tee ffmpeg.log || {
                echo "Stream attempt $attempt failed. Retrying in 10 seconds..."
                sleep 10
                continue
              }
            echo "Stream started successfully."
            exit 0
          done
          echo "Error: Stream failed after 5 attempts."
          exit 1

      - name: Upload FFmpeg logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-logs
          path: ffmpeg.log

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up resources..."
          pkill -f ffmpeg || true