name: IPTV → ffmpeg → Telegram Live (stable 3h, audio fixed)

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6h limit

    env:
      IPTV_SOURCE: ${{ secrets.IPTV_SOURCE }}
      TELEGRAM_SOURCE_URL: ${{ secrets.TELEGRAM_SOURCE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update -qq
          sudo apt install -y mpv ffmpeg pulseaudio-utils alsa-utils xvfb x11-utils xkb-data

      - name: Start virtual display + PulseAudio with fake sink
        run: |
          echo "🎧 Starting virtual display and PulseAudio..."
          Xvfb :99 -screen 0 1280x720x24 +extension GLX +render -nolisten tcp &
          echo "DISPLAY=:99" >> $GITHUB_ENV

          pulseaudio --start --exit-idle-time=-1 || true
          sleep 3

          # Add virtual audio sink
          pactl load-module module-null-sink sink_name=VirtualSink sink_properties=device.description=VirtualOutput
          pactl set-default-sink VirtualSink
          pactl set-default-source VirtualSink.monitor

          echo "✅ Virtual audio device ready."

      - name: Launch mpv (play IPTV)
        run: |
          echo "🎬 Starting mpv..."
          nohup mpv "$IPTV_SOURCE" \
            --no-terminal \
            --really-quiet \
            --geometry=1280x720 \
            --vo=x11 \
            --ao=pulse:device=VirtualSink \
            --profile=low-latency \
            --cache=no \
            > mpv.log 2>&1 &

          sleep 8
          if ! pgrep -x mpv >/dev/null; then
            echo "❌ mpv failed to start!"
            cat mpv.log
            exit 1
          fi
          echo "✅ mpv running fine."

      - name: Stream video + virtual audio to Telegram
        run: |
          echo "🎥 Starting ffmpeg screen capture..."
          nohup ffmpeg \
            -f x11grab -draw_mouse 0 -video_size 1280x720 -framerate 30 -i :99.0 \
            -f pulse -i VirtualSink.monitor \
            -c:v libx264 -preset veryfast -tune zerolatency \
            -b:v 2500k -maxrate 3000k -bufsize 5000k \
            -vf "format=yuv420p" \
            -c:a aac -b:a 128k -ar 44100 -ac 2 \
            -f flv "$TELEGRAM_SOURCE_URL" > ffmpeg.log 2>&1 &

          echo $! > ffmpeg.pid
          echo "✅ ffmpeg started (PID $(cat ffmpeg.pid))"

          for i in $(seq 1 540); do
            sleep 20
            if ! kill -0 $(cat ffmpeg.pid) 2>/dev/null; then
              echo "❌ ffmpeg exited early. Dumping last logs:"
              tail -n 40 ffmpeg.log
              exit 1
            fi
            echo "📡 Stream active... $(date)"
          done

          echo "✅ Stream completed 3 hours."
