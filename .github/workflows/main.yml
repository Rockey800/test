name: IPTV -> Telegram Stream

on:
  workflow_dispatch:

jobs:
  stream:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 hours max
    env:
      SOURCE_URL: ${{ secrets.SOURCE_URL }}
      TELEGRAM_URL: ${{ secrets.TELEGRAM_URL }}
      TELEGRAM_KEY: ${{ secrets.TELEGRAM_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4  # Updated to latest version

      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: Run IPTV -> Telegram streaming
        run: |
          #!/bin/bash
          set -e

          MAX_RETRIES=50
          RETRY_DELAY=5
          FIFO="buffer.ts"

          for i in $(seq 1 $MAX_RETRIES); do
              echo "ðŸ”„ Starting IPTV -> FIFO -> Telegram attempt $i/$MAX_RETRIES"

              # Remove old FIFO/file
              if [[ -e "$FIFO" ]]; then
                  echo "Removing old FIFO/file..."
                  rm -f "$FIFO"
              fi

              # Create FIFO
              mkfifo "$FIFO"
              echo "FIFO buffer created: $FIFO"

              # Start IPTV reader in background with error handling
              ffmpeg -re -i "$SOURCE_URL" -c copy -err_detect ignore_err -loglevel warning -f mpegts "$FIFO" &
              IPTV_PID=$!

              # Stream to Telegram with ~30s buffer/delay
              ffmpeg -re -i "$FIFO" -c copy -f flv -muxdelay 30 "${TELEGRAM_URL}/${TELEGRAM_KEY}" -loglevel warning || {
                  echo "Streaming failed, cleaning up..."
                  kill $IPTV_PID 2>/dev/null || true
                  sleep $RETRY_DELAY
                  continue
              }

              # Clean up IPTV reader
              kill $IPTV_PID 2>/dev/null || true
              echo "Stream stopped, retrying in $RETRY_DELAY seconds..."
              sleep $RETRY_DELAY
          done
